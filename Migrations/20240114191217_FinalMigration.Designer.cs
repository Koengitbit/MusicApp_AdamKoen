// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicApp_AdamKoen.DAL;

#nullable disable

namespace MusicAppAdamKoen.Migrations
{
    [DbContext(typeof(SpotifyDbContext))]
    [Migration("20240114191217_FinalMigration")]
    partial class FinalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Release_Year")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleaseYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Thriller 25 Super Deluxe Edition"
                        },
                        new
                        {
                            Id = 2,
                            ReleaseYear = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "All Eyez On Me"
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.AlbumSong", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("AlbumSongs");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            SongId = 1,
                            OrderIndex = 0
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 3,
                            OrderIndex = 1
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 4,
                            OrderIndex = 2
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 5,
                            OrderIndex = 3
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 6,
                            OrderIndex = 4
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 7,
                            OrderIndex = 5
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 8,
                            OrderIndex = 6
                        },
                        new
                        {
                            AlbumId = 1,
                            SongId = 9,
                            OrderIndex = 7
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 10,
                            OrderIndex = 0
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 11,
                            OrderIndex = 1
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 12,
                            OrderIndex = 2
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 13,
                            OrderIndex = 3
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 14,
                            OrderIndex = 4
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 15,
                            OrderIndex = 5
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 16,
                            OrderIndex = 6
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 17,
                            OrderIndex = 7
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 18,
                            OrderIndex = 8
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 19,
                            OrderIndex = 9
                        },
                        new
                        {
                            AlbumId = 2,
                            SongId = 2,
                            OrderIndex = 10
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Michael Jackson"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2Pac"
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.PlayHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PlayedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayHistory");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = true,
                            Name = "Playlist 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPublic = false,
                            Name = "Playlist 2",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.PlaylistSong", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnriched")
                        .HasColumnType("bit");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSongs");

                    b.HasData(
                        new
                        {
                            PlaylistId = 1,
                            SongId = 1,
                            IsEnriched = false,
                            OrderIndex = 2
                        },
                        new
                        {
                            PlaylistId = 1,
                            SongId = 2,
                            IsEnriched = false,
                            OrderIndex = 1
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Duration = 362,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Wanna Be Starting Something"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            Duration = 180,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Changes"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            Duration = 260,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Baby Be Mine"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 1,
                            Duration = 222,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Girl Is Mine"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 1,
                            Duration = 210,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Thriller"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 1,
                            Duration = 210,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Beat it"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 1,
                            Duration = 210,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Billie Jean"
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 1,
                            Duration = 210,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Human Nature"
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 1,
                            Duration = 210,
                            Genre = "Pop",
                            ReleaseDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "P.Y.T (Pretty Young Thing)"
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 2,
                            Duration = 278,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ambitionz Az A Ridah"
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 2,
                            Duration = 276,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "All About U"
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 2,
                            Duration = 248,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Skandalouz"
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 2,
                            Duration = 312,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Got My Mind Made Up"
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 2,
                            Duration = 285,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "How Do U Want It"
                        },
                        new
                        {
                            Id = 15,
                            ArtistId = 2,
                            Duration = 246,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "2 Of Amerikaz Most Wanted"
                        },
                        new
                        {
                            Id = 16,
                            ArtistId = 2,
                            Duration = 374,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "No More Pain"
                        },
                        new
                        {
                            Id = 17,
                            ArtistId = 2,
                            Duration = 283,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Life Goes On"
                        },
                        new
                        {
                            Id = 18,
                            ArtistId = 2,
                            Duration = 314,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Only God Can Judge Me"
                        },
                        new
                        {
                            Id = 19,
                            ArtistId = 2,
                            Duration = 314,
                            Genre = "Hip Hop",
                            ReleaseDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Trading War Stories"
                        });
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "testuser@example.com",
                            Name = "Test User",
                            Password = "hashedpassword"
                        });
                });

            modelBuilder.Entity("Like", b =>
                {
                    b.HasOne("MusicApp_AdamKoen.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("MusicApp_AdamKoen.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");

                    b.HasOne("MusicApp_AdamKoen.Models.Playlist", "Playlist")
                        .WithMany()
                        .HasForeignKey("PlaylistId");

                    b.HasOne("MusicApp_AdamKoen.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId");

                    b.HasOne("MusicApp_AdamKoen.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");

                    b.Navigation("Playlist");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.AlbumSong", b =>
                {
                    b.HasOne("MusicApp_AdamKoen.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp_AdamKoen.Models.Song", "Song")
                        .WithMany("Albums")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Playlist", b =>
                {
                    b.HasOne("MusicApp_AdamKoen.Models.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.PlaylistSong", b =>
                {
                    b.HasOne("MusicApp_AdamKoen.Models.Playlist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp_AdamKoen.Models.Song", "Song")
                        .WithMany("Playlists")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Song", b =>
                {
                    b.HasOne("MusicApp_AdamKoen.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Playlist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.Song", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("MusicApp_AdamKoen.Models.User", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
