@model MusicApp_AdamKoen.ViewModels.PlaylistViewModel
@{
    ViewData["Title"] = "Playlist Details";
}
@{
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

}


<div id="playbackBar">
    <div class="playback-info">
        Now Playing: <span id="playingSong"></span>
        <button onclick="skipSong()">Skip</button>
    </div>
    <div class="progress-bar" id="progressBar"></div>
</div>

<h2>@Model.Name Playlist</h2>


<div class="container" id="playlist-@Model.Id">
    <div class="row">
        <div class="col-1">
            <button class="like-button" onclick="likeItem('playlist', @Model.Id)">
    <i class="@(Model.IsLiked ? "fa-solid" : "fa-regular") fa-heart"></i>
</button>
        </div>
        <div class="col-2">
            Created At: @Model.CreatedAt.ToShortDateString()
        </div>
        <div class="col-2">
            Playlist is @(Model.IsPublic ? "public" : "not public")
        </div>
    </div>
</div>




@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

    
@if (Model.UserId.ToString() == currentUserId)
{
    <div class="container">
        <div class="row">
            
    <form asp-action="AddSongToPlaylist" method="post">
                Add Song:
        <input type="hidden" name="playlistId" value="@Model.Id" />
                
                
        <select asp-for="SelectedSongId" asp-items="ViewBag.Songs"></select>
                
        <button class="minus-button" type="submit"><i class="fa-solid fa-plus"></i></button>
                
    </form>
        </div>
    </div>

   

    @if (Model.OtherPlaylists != null && Model.OtherPlaylists.Any())
    {
        <div class="container">
             <div class="row">
                 
        <form asp-action="AddPlaylistToPlaylist" method="post">
                    Add Playlist:
            <input type="hidden" name="targetPlaylistId" value="@Model.Id" />
            <select name="sourcePlaylistId" asp-items="@(new SelectList(Model.OtherPlaylists, "Id", "Name"))"></select>
            <button class="minus-button" type="submit"><i class="fa-solid fa-plus"></i></button>
        </form>
            </div>
        </div>
    }
}
<div class="container">
    Total Songs: @Model.TotalSongs,
    Total Duration: @TimeSpan.FromSeconds(Model.TotalDuration).ToString(@"hh\:mm\:ss")
</div>
<div class="container">
    <div class="row">
        <div class="col">
            Play Playlist Buttons:
        </div>
    </div>
    <div class="row">
        <div class ="col-1">
            <button class="play-button" onclick="playAllSongs()"><i class="fa-solid fa-play"></i></button>
        </div>
        <div class="col-1">
        <button class="play-button" onclick="playAllSongsShuffled()"><i class="fa-solid fa-shuffle"></i></button>
        </div>
        <div class="col-2">
            @using (Html.BeginForm("Enrich", "Playlist", FormMethod.Post))
        {
            <input type="hidden" name="playlistId" value="@Model.Id" />
            <button type="submit" class="btn btn-primary">Enrich Playlist</button>
        }
        </div>
    </div>
</div>


<h3>Songs</h3>
<table class="table" id="songsTable" data-playlist-id="@Model.Id">
    <tr>
        <th>#</th>
        <th>Title</th>
        <th>Actions</th>
        <th><i class="fa-regular fa-clock"></i></th>
        <!-- ... other headers ... -->
    </tr>
    @foreach (var song in Model.Songs.OrderBy(s => s.OrderIndex))
    {

        <tr draggable="true" class="song-row" @* style="@(song.IsEnriched ? "background-color: #FFFF00;" : "")" *@ id="song-@song.Id" title="@song.Title" data-duration="@song.Duration" data-enriched="@song.IsEnriched">
            <td>@song.OrderIndex</td>
            <td>@song.Title <br>
                <a asp-controller="Artist" asp-action="Details" asp-route-id="@song.ArtistId">@song.ArtistName</a>
            </td>
            <td>
                @if (Model.UserId.ToString() == currentUserId)
                {
                    <form asp-action="RemoveSongFromPlaylist" method="post">
                        <input type="hidden" name="playlistId" value="@Model.Id" />
                        <input type="hidden" name="songToRemoveId" value="@song.Id" />
                        <button class="minus-button" type="submit"><i class="fa-solid fa-trash"></i></button>
                    </form>
                }
                <button class="like-button" onclick="likeItem('song', @song.Id)">
                    <i class="@(song.IsLiked ? "fa-solid" : "fa-regular") fa-heart"></i>
                </button>
                <button class="play-button" onclick="playSong('@song.Id','@song.Title', '@song.Duration')"><i class="fa-solid fa-play"></i></button>
            </td>
            <td>
                @string.Format("{0:D2}:{1:D2}", song.Duration / 60, song.Duration % 60)
            </td>
            <!-- ... other data cells ... -->
        </tr>
    }
</table>
